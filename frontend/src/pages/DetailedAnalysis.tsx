import Navbar from '@/components/Navbar'
import { useLocation } from "react-router-dom";
import { useState } from 'react';
import { FileUploader } from 'react-drag-drop-files';
import toast from 'react-hot-toast';
import axios from 'axios';
const DetailedAnalysis = () => {
  const fileTypes = ["EXE","PDF","DOC"];
  const [selectedFile,setSelectedFile] = useState()
  const [isLoading,setIsLoading] = useState(false)
  const [response, setResponse] = useState(null);

  const location = useLocation();
  const passedState = location.state;
  console.log(passedState)
  const handleChange = (file) => {
    setSelectedFile(file);
  };
  const handleFileChange = (event) => {
    setSelectedFile(event.target.files[0]);
  };
  const handleUpload = async () => {
    if (!selectedFile) {
      alert("Please select a file first.");
      return;
    }

    const formData = new FormData();
    formData.append("file", selectedFile); // The name 'file' should match with your backend API's expected field

    try {
      // Adjust the URL and headers as per your backend API's requirements
      setIsLoading(true)
      const response = await axios.post(
        "http://127.0.0.1:8000/vt-scan/",
        formData,
        {
          headers: {
            "Content-Type": "multipart/form-data",
          },
        }
      );
      toast.success("File uploaded Successfully")
      setResponse(response.data);
      // Optionally, you can set some state here to indicate a successful upload or reset the form
    } catch (error) {
      console.error("Error uploading file:", error);
      toast.error("Error uploading/scanning the file")
      // Optionally, handle the error, e.g., set an error state, show a message, etc.
    }
    finally{
      setIsLoading(false)
    }
  };
  console.log(response)
  // if(passedState!=null){
  //   setSelectedFile(passedState)
  //   handleUpload()
  // }
  return (
    <div>
      <Navbar/>
      <div className='flex items-center justify-center'>
        <div>
          <div>Get a detailed analysis of your scans</div>
          <div className="mt-[20px] flex flex-col items-center justify-center gap-6">
            <FileUploader
              multiple={false}
              handleChange={handleChange}
              name="file"
              types={fileTypes}
            />
            <div className="flex gap-4">
              <input
                hidden
                id="fileInput"
                type="file"
                onChange={handleFileChange}
                className="p-4"
              />
              <label
                htmlFor="fileInput"
                className="bg-transparent border border-blue-500   text-blue-500 font-bold py-2 px-4 rounded cursor-pointer"
              >
                Choose File
              </label>

              <button
                onClick={handleUpload}
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
              >
                Upload
              </button>
            </div>
          </div>
        </div>

      </div>
    </div>
  )
}

export default DetailedAnalysis


